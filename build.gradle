/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'jacoco'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'
    implementation 'org.jongo:jongo:1.4.1'
    implementation 'org.mongodb:bson:4.0.1'
    implementation 'org.mongodb:mongo-java-driver:3.12.2'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.6.1'

    testImplementation 'org.assertj:assertj-core:3.15.0'

    testImplementation "org.mockito:mockito-core:3.3.3"
}

test {
    useJUnitPlatform()
}

task codeCoverageReport(type: JacocoReport) {
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
        xml.destination = file("${buildDir}/reports/jacoco/report.xml")
    }
    executionData(test)
}
